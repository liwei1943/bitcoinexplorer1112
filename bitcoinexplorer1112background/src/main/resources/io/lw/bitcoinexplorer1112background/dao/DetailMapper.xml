<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.lw.bitcoinexplorer1112background.dao.DetailMapper">
  <resultMap id="BaseResultMap" type="io.lw.bitcoinexplorer1112background.po.Detail">
    <id column="detailId" jdbcType="CHAR" property="detailid" />
    <result column="index" jdbcType="INTEGER" property="index" />
    <result column="address" jdbcType="CHAR" property="address" />
    <result column="pkscript" jdbcType="CHAR" property="pkscript" />
    <result column="sigscript" jdbcType="CHAR" property="sigscript" />
    <result column="witness" jdbcType="VARCHAR" property="witness" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="value" jdbcType="DOUBLE" property="value" />
    <result column="txhash" jdbcType="CHAR" property="txhash" />
  </resultMap>
  <sql id="Base_Column_List">
    detailId, index, address, pkscript, sigscript, witness, details, value, txhash
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from detail
    where detailId = #{detailid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from detail
    where detailId = #{detailid,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="io.lw.bitcoinexplorer1112background.po.Detail">
    insert into detail (detailId, index, address, 
      pkscript, sigscript, witness, 
      details, value, txhash)
    values (#{detailid,jdbcType=CHAR}, #{index,jdbcType=INTEGER}, #{address,jdbcType=CHAR}, 
      #{pkscript,jdbcType=CHAR}, #{sigscript,jdbcType=CHAR}, #{witness,jdbcType=VARCHAR}, 
      #{details,jdbcType=VARCHAR}, #{value,jdbcType=DOUBLE}, #{txhash,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.lw.bitcoinexplorer1112background.po.Detail">
    insert into detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="detailid != null">
        detailId,
      </if>
      <if test="index != null">
        index,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="pkscript != null">
        pkscript,
      </if>
      <if test="sigscript != null">
        sigscript,
      </if>
      <if test="witness != null">
        witness,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="txhash != null">
        txhash,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="detailid != null">
        #{detailid,jdbcType=CHAR},
      </if>
      <if test="index != null">
        #{index,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
      <if test="pkscript != null">
        #{pkscript,jdbcType=CHAR},
      </if>
      <if test="sigscript != null">
        #{sigscript,jdbcType=CHAR},
      </if>
      <if test="witness != null">
        #{witness,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=DOUBLE},
      </if>
      <if test="txhash != null">
        #{txhash,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.lw.bitcoinexplorer1112background.po.Detail">
    update detail
    <set>
      <if test="index != null">
        index = #{index,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=CHAR},
      </if>
      <if test="pkscript != null">
        pkscript = #{pkscript,jdbcType=CHAR},
      </if>
      <if test="sigscript != null">
        sigscript = #{sigscript,jdbcType=CHAR},
      </if>
      <if test="witness != null">
        witness = #{witness,jdbcType=VARCHAR},
      </if>
      <if test="details != null">
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=DOUBLE},
      </if>
      <if test="txhash != null">
        txhash = #{txhash,jdbcType=CHAR},
      </if>
    </set>
    where detailId = #{detailid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.lw.bitcoinexplorer1112background.po.Detail">
    update detail
    set index = #{index,jdbcType=INTEGER},
      address = #{address,jdbcType=CHAR},
      pkscript = #{pkscript,jdbcType=CHAR},
      sigscript = #{sigscript,jdbcType=CHAR},
      witness = #{witness,jdbcType=VARCHAR},
      details = #{details,jdbcType=VARCHAR},
      value = #{value,jdbcType=DOUBLE},
      txhash = #{txhash,jdbcType=CHAR}
    where detailId = #{detailid,jdbcType=CHAR}
  </update>
  <resultMap id="BaseResultMap" type="io.lw.bitcoinexplorer1112background.po.Detail">
    <result column="tx_detail_id" jdbcType="CHAR" property="txDetailId" />
    <result column="transaction_id" jdbcType="INTEGER" property="transactionId" />
    <result column="address" jdbcType="CHAR" property="address" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
  </resultMap>
  <insert id="insert" parameterType="io.lw.bitcoinexplorer1112background.po.Detail">
    insert into detail (tx_detail_id, transaction_id, address, 
      type, amount)
    values (#{txDetailId,jdbcType=CHAR}, #{transactionId,jdbcType=INTEGER}, #{address,jdbcType=CHAR}, 
      #{type,jdbcType=VARCHAR}, #{amount,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.lw.bitcoinexplorer1112background.po.Detail">
    insert into detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="txDetailId != null">
        tx_detail_id,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="amount != null">
        amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="txDetailId != null">
        #{txDetailId,jdbcType=CHAR},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=CHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>